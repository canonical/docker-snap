name: docker
version: '25.0.12'
summary: Docker container runtime
description: Refer to https://snapcraft.io/docker
license: (Apache-2.0 AND MIT AND GPL-2.0)

grade: stable
confinement: strict

base: core18
assumes:
  - snapd2.59.1

layout:
  /etc/docker:
    bind: $SNAP_DATA/etc/docker
  /etc/gitconfig:
    bind-file: $SNAP_DATA/etc/gitconfig
  /usr/libexec/docker/cli-plugins:
    symlink: $SNAP/usr/libexec/docker/cli-plugins

environment:
  DEFAULT_DATA_ROOT: "$SNAP_COMMON/var-lib-docker"
  GIT_EXEC_PATH: "$SNAP/usr/lib/git-core"
  GIT_TEMPLATE_DIR: "$SNAP/usr/share/git-core/templates"

plugs:
  home:
    read: all
  support:
    interface: docker-support
  privileged:
    interface: docker-support
    privileged-containers: true
  docker-cli:
    interface: docker

slots:
  config-ro:
    interface: content
    content: docker-config-ro
    read:
      - $SNAP_DATA/config
  docker-daemon:
    interface: docker
  docker-executables:
    content: docker-executables
    interface: content
    read:
      - .
  docker-registry-certificates:
    content: docker-registry-certificates
    interface: content
    write:
      - $SNAP_DATA/etc/docker/certs.d

apps:
  docker:
    command: bin/docker
    completer: bin/docker-completion.sh
    plugs:
      - docker-cli
      - network
      - home
      - removable-media

  dockerd:
    command: bin/dockerd-wrapper
    daemon: simple
    plugs:
      - removable-media
      - firewall-control
      - home
      - log-observe
      - network-bind
      - network-control
      - privileged
      - support
    slots:
      - docker-daemon

  compose:
    command: usr/libexec/docker/cli-plugins/docker-compose
    plugs:
      - removable-media
      - docker-cli
      - network
      - home

parts:
  utility-scripts:
    plugin: dump
    source: .
    stage-packages:
      - mount
    stage:
      - bin/*
      - config/daemon.json
      - patches/*
    prime:
      - -bin/go-build-helper.sh
      - -patches/*
      - bin/*
      - config/daemon.json

  utils:
    plugin: nil
    stage-packages:
      - jq
      - pciutils

  engine:
    plugin: make
    source: https://github.com/moby/moby.git
    source-tag: v25.0.12
    source-depth: 1
    override-build: |
      $SNAPCRAFT_STAGE/patches/patch.sh

      # docker build specific environment variables
      export VERSION=$(craftctl get version)
      export DOCKER_GITCOMMIT=$(git rev-parse --short HEAD)
      export GITCOMMIT=$DOCKER_GITCOMMIT
      export DISABLE_WARN_OUTSIDE_CONTAINER=1
      export DOCKER_BUILDTAGS='apparmor seccomp selinux'

      # setup the go build environment for docker/docker
      . "$SNAPCRAFT_STAGE/bin/go-build-helper.sh"
      gopartbootstrap github.com/docker/docker

      # build the dockerd binary
      ./hack/make.sh dynbinary

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T bundles/dynbinary-daemon/dockerd "$SNAPCRAFT_PART_INSTALL/bin/dockerd"
      # install docker-proxy previously provided by libnetwork part
      install -T bundles/dynbinary-daemon/docker-proxy "$SNAPCRAFT_PART_INSTALL/bin/docker-proxy"
    # https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L3 (Docker-supported Go version for Engine)
    build-snaps: &go ['go/1.23/stable']
    # we get weird behavior if we mix/match Go versions throughout this one snapcraft.yml, so we use a YAML reference here to ensure we're always consistent throughout
    after: [utility-scripts]
    build-packages:
      - btrfs-progs
      - gcc
      - git
      - libc6-dev
      - libdevmapper-dev
      - libltdl-dev
      - libsystemd-dev
      - patch
      - pkg-config
    stage-packages:
      - git
      - libltdl7
      - pigz
      - xz-utils
      - zfsutils-linux

  containerd:
    plugin: make
    source: https://github.com/containerd/containerd.git
    # from https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L199
    source-tag: v1.7.27
    source-depth: 1
    override-build: |
      make GIT_COMMIT= GIT_BRANCH= LDFLAGS=

      rm bin/containerd-stress

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -t "$SNAPCRAFT_PART_INSTALL/bin" bin/containerd* bin/ctr
    build-snaps: *go
    build-packages:
      - btrfs-tools

  runc:
    plugin: make
    source: https://github.com/opencontainers/runc.git
    # from https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L290
    source-tag: v1.2.5
    source-depth: 1
    override-build: |
      make BUILDTAGS='seccomp apparmor selinux' COMMIT=

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T runc "$SNAPCRAFT_PART_INSTALL/bin/runc"
    build-snaps: *go
    build-packages:
      - libapparmor-dev
      - libseccomp-dev

  tini:
    plugin: cmake
    source: https://github.com/krallin/tini.git
    source-type: git
    # from https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L325
    source-tag: v0.19.0
    source-depth: 1
    organize:
      'bin/tini-static': bin/docker-init
    build-packages:
      - build-essential
    prime:
      - -usr/local/bin/tini

  docker-cli:
    plugin: make
    build-snaps: *go
    source: https://github.com/docker/cli.git
    source-tag: v25.0.2
    source-depth: 1
    override-build: |
      # docker build specific environment variables
      export VERSION=$(craftctl get version)
      export DOCKER_GITCOMMIT=$(git rev-parse --short HEAD)
      export GITCOMMIT=$DOCKER_GITCOMMIT
      export DISABLE_WARN_OUTSIDE_CONTAINER=1

      # setup the go build environment for docker-cli
      . $SNAPCRAFT_STAGE/bin/go-build-helper.sh
      gopartbootstrap github.com/docker/cli

      # build the docker cli binary
      unset LDFLAGS
      make binary

      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T build/docker "$SNAPCRAFT_PART_INSTALL/bin/docker"
      install -T contrib/completion/bash/docker "$SNAPCRAFT_PART_INSTALL/bin/docker-completion.sh"
    after: [utility-scripts]
    stage-packages:
      - git

  buildx:
    plugin: nil
    source: https://github.com/docker/buildx.git
    # https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L15
    source-tag: v0.12.1
    source-depth: 1
    override-build: |
      export DESTDIR="$SNAPCRAFT_PART_INSTALL/usr/libexec/docker/cli-plugins"
      export VERSION=$(git describe --match 'v[0-9]*' --always --tags)
      export REVISION=$(git rev-parse HEAD)
      export GO_EXTRA_LDFLAGS="-s -w"
      ./hack/build
    build-snaps: *go

  compose-v2:
    plugin: make
    source: https://github.com/docker/compose.git
    # https://github.com/docker/docker-ce-packaging/blob/master/common.mk // reference URL
    # https://github.com/moby/moby/blob/v25.0.12/Dockerfile#L16 // Fetch from
    source-tag: v2.24.5
    source-depth: 1
    override-build: |
      make build

      install -d "$SNAPCRAFT_PART_INSTALL/usr/libexec/docker/cli-plugins"
      install -T bin/build/docker-compose "$SNAPCRAFT_PART_INSTALL/usr/libexec/docker/cli-plugins/docker-compose"
    build-snaps: *go


# vim:set et ts=2 sw=2:

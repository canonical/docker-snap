name: Nvidia Graphics Tests

on:
    workflow_run:
      workflows:
        - "Smoke Test"
      types:
        - completed
    push: # OBS; To be Removed latter, used only to check workflow functionallity
      branches: [ main, nvidia-ci-workflow ] # TODO; Remove this latter
    pull_request: # TODO; Remove this latter
      branches: [ main ] # TODO; Remove this latter

jobs:

    build-and-test:
        runs-on: [self-hosted, testflinger]
        strategy:
          fail-fast: true
          matrix:
            queue:
              - 202008-28167
              - 202112-29789
            data_source:
              - "distro: noble"
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Submit Testflinger job
              uses: canonical/testflinger/.github/actions/submit@main
              with:
                poll: true
                job: |
                  job_queue: ${{ matrix.queue }}
                  global_timeout: 3600
                  output_timeout: 1800
                  provision_data:
                    ${{ matrix.data_source }}
                  test_data:
                  
                    # Copy files from the GH runner to the Testflinger Agent
                    attachments:
                      - local: ".github/workflows/nvidia-test"
                        agent: "scripts"

                    # Run commands on the Testflinger Agent
                    test_cmds: |
                      #!/usr/bin/env bash
                      set -ex

                      # List the attached files
                      find attachments/test

                      SCRIPTS=./attachments/test/scripts

                      # Setup the environment on the target device
                      ssh ubuntu@$DEVICE_IP "$(< $SCRIPTS/setup.sh)"

                      # Reboot it
                      ssh ubuntu@$DEVICE_IP "sudo reboot &"

                      echo "Wait for the device to boot and start its SSH server"
                      $SCRIPTS/wait_for_port.sh $DEVICE_IP 22

                      # Run the tests
                      ssh ubuntu@$DEVICE_IP "$(< $SCRIPTS/test.sh)"


                      


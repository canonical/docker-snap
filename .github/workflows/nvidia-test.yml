name: Nvidia Graphics Tests

on:
  # Uncomment this trigger only during workflow development
  # pull_request:
  #   branches: [ main ]
  # Manual trigger
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Run id number'
        required: true
        type: number
      publish:
        description: 'Publish to Store'
        default: true
        type: boolean

jobs:
    publish:
        if: ${{ inputs.publish == true }}
        runs-on: ubuntu-latest
        steps:
            - name: Get the artifact
              uses: dawidd6/action-download-artifact@v8
              with:
                run_id: ${{ inputs.run_id }}
                name: docker_${{ inputs.run_id }}_amd64.snap

            - name: Publish to Store
              uses: snapcore/action-publish@v1
              env:
                SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.SNAPCRAFT_LOGIN }}
              with:
                snap: docker_${{ inputs.run_id }}_amd64.snap
                release: latest/edge/runid-${{ inputs.run_id }}

    test:
        needs: publish
        if: ${{ always() && !failure() && !cancelled() }}
        runs-on: [self-hosted, testflinger]
        env:
          TESTFLINGER_DIR: .github/workflows/testflinger
          JOB_QUEUE: docker-nvidia
          SNAP_CHANNEL: latest/edge/runid-${{ inputs.run_id }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create Testflinger job queue
              run: |

                targetOS=("noble" "core22-latest")

                for OS_RELEASE in ${targetOS[@]}; do

                  envsubst '$OS_RELEASE' \
                    < $TESTFLINGER_DIR/nvidia-job.yaml \
                    > $TESTFLINGER_DIR/nvidia-job-"$OS_RELEASE".temp

                  envsubst '$JOB_QUEUE' \
                    < $TESTFLINGER_DIR/nvidia-job.yaml \
                    > $TESTFLINGER_DIR/nvidia-job-"$OS_RELEASE".temp

                  mv $TESTFLINGER_DIR/nvidia-job-"$OS_RELEASE".temp $TESTFLINGER_DIR/nvidia-job-"$OS_RELEASE".yaml
                done

                envsubst '$SNAP_CHANNEL' \
                  < $TESTFLINGER_DIR/scripts/setup.sh \
                  > $TESTFLINGER_DIR/scripts/setup.temp

                mv $TESTFLINGER_DIR/scripts/setup.temp $TESTFLINGER_DIR/scripts/setup.sh

            - name: Submit Testflinger job for Noble
              uses: canonical/testflinger/.github/actions/submit@main
              with:
                poll: true
                job-path: ${{ env.TESTFLINGER_DIR }}/nvidia-job-noble.yaml

            - name: Submit Testflinger job for Ubuntu Core 22
              uses: canonical/testflinger/.github/actions/submit@main
              with:
                poll: true
                job-path: ${{ env.TESTFLINGER_DIR }}/nvidia-job-core22-latest.yaml
